From 7677d1e95e998a39e8c85241aa3b026096bd9bbe Mon Sep 17 00:00:00 2001
From: Markus Stockhausen <markus.stockhausen@gmx.de>
Date: Sun, 11 Aug 2024 16:03:35 -0400
Subject: [PATCH] realtek: don't unmask non-maskable GPIO IRQs

On uniprocessor builds, for_each_cpu(cpu, mask) will assume 'mask'
always contains exactly one CPU, and ignore the actual mask contents.
This causes the loop to run, even when it shouldn't on an empty mask,
and tries to access an uninitialised pointer.

Fix this by wrapping the loop in a cpumask_empty() check, to ensure it
will not run on uniprocessor builds if the CPU mask is empty.

Fixes: af6cd37f42f3 ("realtek: replace RTL93xx GPIO patches")
Reported-by: INAGAKI Hiroshi <musashino.open@gmail.com>
Reported-by: Robert Marko <robimarko@gmail.com>
Tested-by: Robert Marko <robimarko@gmail.com>
Submitted-by: Sander Vanheule <sander@svanheule.net>
---
 drivers/gpio/gpio-realtek-otto.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

--- a/drivers/gpio/gpio-realtek-otto.c
+++ b/drivers/gpio/gpio-realtek-otto.c
@@ -315,8 +315,13 @@ static int realtek_gpio_irq_init(struct
 
 	realtek_gpio_clear_isr(ctrl, mask_all);
 
-	for_each_cpu(cpu, &ctrl->cpu_irq_maskable)
-		ctrl->bank_write(realtek_gpio_irq_cpu_mask(ctrl, cpu), mask_all);
+	/*
+	 * Uniprocessor builds assume a mask always contains one CPU,
+	 * so only start the loop if we have at least one maskable CPU.
+	 */
+	if(!cpumask_empty(&ctrl->cpu_irq_maskable))
+		for_each_cpu(cpu, &ctrl->cpu_irq_maskable)
+			ctrl->bank_write(realtek_gpio_irq_cpu_mask(ctrl, cpu), mask_all);
 
 	return 0;
 }
